"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[162],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=s(t),b=o,f=u["".concat(l,".").concat(b)]||u[b]||p[b]||i;return t?r.createElement(f,d(d({ref:n},c),{},{components:t})):r.createElement(f,d({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,d=new Array(i);d[0]=b;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a[u]="string"==typeof e?e:o,d[1]=a;for(var s=2;s<i;s++)d[s]=t[s];return r.createElement.apply(null,d)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},9390:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:2},d="Getting Started",a={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"To get started useing Job you must have the code in your game, to do so make a module within game/replicatedstorage after doing so you can name it whatever you want but that will be what you use to require it so keep that in mind. (I recommend using Job to keep it clean and simple)",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/job/docs/getting-started",draft:!1,editUrl:"https://github.com/WarpedEntrance/testdocss/edit/master/docs/getting-started.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Job",permalink:"/job/docs/intro"},next:{title:"Using Job to get modules",permalink:"/job/docs/geting-modules"}},l={},s=[],c={toc:s},u="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"To get started useing Job you must have the code in your game, to do so make a module within ",(0,o.kt)("inlineCode",{parentName:"p"},"game/replicatedstorage")," after doing so you can name it whatever you want but that will be what you use to require it so keep that in mind. (I recommend using Job to keep it clean and simple)"),(0,o.kt)("p",null,"After doing so paste the code into the module you made."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'-- @author Sharky65749\n-- @ClassInfo Job is a way to have all assets organized and for client to server stuff\n\nlocal Job = {};\n\nlocal CollectionService = game:GetService("CollectionService");\nlocal RunService = game:GetService("RunService");\nJob.Initialised = true\nif RunService:IsServer() then\n\n    print("Server: Initialising Job...");\n\n    for i, JobAsset in pairs(game:GetService("ReplicatedStorage"):GetDescendants()) do\n        if JobAsset:IsA("Folder") then\n            CollectionService:AddTag(JobAsset, "JobFolder");\n        elseif JobAsset:IsA("ModuleScript") and JobAsset ~= script then\n            CollectionService:AddTag(JobAsset, "JobModule");\n        end;\n    end;\n\n    for i, JobStorageAssets in pairs(game:GetService("ServerStorage"):GetDescendants()) do\n        if JobStorageAssets:IsA("Folder") then\n            CollectionService:AddTag(JobStorageAssets, "JobFolder");\n        elseif JobStorageAssets:IsA("ModuleScript") then\n            CollectionService:AddTag(JobStorageAssets, "JobModule");\n        end;\n    end;\n\n    for i, JobScript in pairs(game:GetService("ServerScriptService"):GetDescendants()) do\n        if JobScript:IsA("Folder") then\n            CollectionService:AddTag(JobScript, "JobFolder");\n        elseif JobScript:IsA("ModuleScript") then\n            CollectionService:AddTag(JobScript, "JobModule");\n        end;\n    end;\n\n    Job.Initialised = true;\n\n    game:GetService("CollectionService"):AddTag(script, "JobInitialised");\n\nelse\n    print("Client: Initialising Job...");\n\n    if CollectionService:HasTag(script, "JobInitialised") == false then\n\n        local JobInitialised = nil;\n        JobInitialised = CollectionService:GetInstanceAddedSignal("JobInitialised"):Connect(function(Job)\n            if JobInitialised == script then\n                Job.Initialised = true;\n                JobInitialised:Disconnect();\n                JobInitialised = nil;\n            end;\n        end);\n    else\n        Job.Initialised = true;\n    end;\nend;\n\nprint("Job initialised");\n\nfunction Job.LoadModule(Job, Module)\n\n    if Job.Initialised == true then\n        for i, JobModule in pairs(CollectionService:GetTagged("JobModule")) do\n\n            if JobModule.Name == Module then\n                return require(JobModule);\n            end;\n\n        end;\n        error("Requested module \\"" .. Module .. "\\" was not found!");\n        return;\n    end;\n\n    warn("Job has not been initialised. Script performance may decrease.");\n\n    for i, RepJobModule in pairs(game:GetService("ReplicatedStorage"):GetDescendants()) do\n\n        if RepJobModule:IsA("ModuleScript") and RepJobModule.Name == Module then\n            return require(RepJobModule);\n        end;\n\n    end;\n\n    if not RunService:IsServer() then\n\n        error("Requested module \\"" .. Module .. "\\" was not found!");\n        return;\n\n    end;\n\n    for i, ServerStoreModule in pairs(game:GetService("ServerStorage"):GetDescendants()) do\n        if ServerStoreModule:IsA("ModuleScript") and ServerStoreModule.Name == Module then\n            return require(ServerStoreModule);\n        end;\n    end;\n\n    for i, JobScriptModule in pairs(game:GetService("ServerScriptService"):GetDescendants()) do\n        if JobScriptModule:IsA("ModuleScript") and JobScriptModule.Name == Module then\n            return require(JobScriptModule);\n        end;\n    end;\n\n    error("Requested module \\"" .. Module .. "\\" was not found!");\n\nend;\n\nfunction Job.GetFolder(Job, Folder)\n\n    if Job.Initialised == true then\n        for i, JobFolder in pairs(CollectionService:GetTagged("JobFolder")) do\n            if JobFolder.Name == Folder then\n                return JobFolder;\n            end;\n        end;\n\n        error("Requested folder \\"" .. Folder .. "\\" was not found!");\n\n        return;\n    end;\n\n    \n\n    for i, JobFolderRep in pairs(game:GetService("ReplicatedStorage"):GetDescendants()) do\n        if JobFolderRep:IsA("Folder") and JobFolderRep.Name == Folder then\n            return JobFolderRep;\n        end;\n    end;\n\n    if not RunService:IsServer() then\n        error("Requested folder \\"" .. Folder .. "\\" was not found!");\n        return;\n    end;\n\n    for i, ServerJobFolder in pairs(game:GetService("ServerStorage"):GetDescendants()) do\n        if ServerJobFolder:IsA("Folder") and ServerJobFolder.Name == Folder then\n            return ServerJobFolder;\n        end;\n    end;\n    \n    for i, JobFolderScript in pairs(game:GetService("ServerScriptService"):GetDescendants()) do\n        if JobFolderScript:IsA("Folder") and JobFolderScript.Name == Folder then\n            return JobFolderScript;\n        end;\n    end;\n\n    error("Requested folder \\"" .. Folder .. "\\" was not found!");\nend;\n\n\nreturn Job;\n')),(0,o.kt)("p",null,"After doing so head over to the next page to see how to use it!"))}p.isMDXComponent=!0}}]);