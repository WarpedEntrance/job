"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[162],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9390:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2},i="Getting Started",l={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"Your UI code is intended to run on every frame. To get started with Plasma, the first step is to set up an event loop:",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/job/docs/getting-started",draft:!1,editUrl:"https://github.com/WarpedEntrance/testdocss/edit/master/docs/getting-started.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Plasma",permalink:"/job/docs/intro"},next:{title:"Creating Custom Widgets",permalink:"/job/docs/creating-widgets"}},s={},c=[],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"Your UI code is intended to run on every frame. To get started with Plasma, the first step is to set up an event loop:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal Players = game:GetService("Players")\nlocal PlayerGui = Players.LocalPlayer:WaitForChild("PlayerGui")\nlocal RunService = game:GetService("RunService")\nlocal Plasma = require(ReplicatedStorage.Plasma)\n\nlocal screenGui = Instance.new("ScreenGui")\nscreenGui.Name = "Plasma"\nscreenGui.Parent = PlayerGui\n\nlocal root = Plasma.new(screenGui)\n\nRunService.Heartbeat:Connect(function()\n    Plasma.start(root, function()\n        Plasma.window("Hello plasma!", function()\n            if Plasma.button("Say hello"):clicked() then\n                print("Hello world!")\n            end\n        end)\n    end)\n\nend)\n')),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://i.eryn.io/2150/RobloxStudioBeta-hHIjzTo6.png",alt:"Example"})),(0,a.kt)("p",null,"In the above code sample, we call ",(0,a.kt)("inlineCode",{parentName:"p"},"Plasma.new"),", passing in the root instance where we want our UI to end up, in this case it's a ScreenGui."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Plasma.new")," returns an object which holds state about our UI. You don't need to interact with this object, just keep it around so we can pass it into Plasma later."),(0,a.kt)("p",null,"We create an event connected to Heartbeat, and every heartbeat event, we call ",(0,a.kt)("inlineCode",{parentName:"p"},"Plasma.start")," with our ",(0,a.kt)("inlineCode",{parentName:"p"},"root")," and a function that creates the UI."),(0,a.kt)("p",null,"The function we pass to ",(0,a.kt)("inlineCode",{parentName:"p"},"Plasma.start")," cannot yield (doing so will error). Inside, we can create our UI using Plasma's ",(0,a.kt)("a",{parentName:"p",href:"/api/Plasma#arrow"},"widgets"),"."),(0,a.kt)("p",null,"From here, you should look at the ",(0,a.kt)("a",{parentName:"p",href:"/api/Plasma"},"API reference")," to check out all the other available widgets!"))}d.isMDXComponent=!0}}]);